openapi: 3.0.1
info:
  title: Seqera API
  description: Seqera platform services API
  contact:
    url: https://seqera.io
    email: info@seqera.io
  version: 1.24.0
paths:
  /actions:
    get:
      summary: List actions
      description: "Lists all available actions in a user context, enriched by `attributes`.\
        \ Append `?workspaceId` to list actions in a workspace context."
      operationId: ListActions
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: attributes
        in: query
        description: "Additional attribute values to include in the response (`labels`).\
          \ Returns an empty value (`labels: null`) if omitted."
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ActionQueryAttribute'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create action
      description: Creates a new pipeline action. Append `?workspaceId` to associate
        the action with the given workspace.
      operationId: CreateAction
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Action create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActionResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /actions/labels/add:
    post:
      summary: Add labels to actions
      description: Adds the given list of labels to the given pipeline actions.
      operationId: AddLabelsToActions
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateActionLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /actions/labels/apply:
    post:
      summary: Apply labels to actions
      description: Applies the given list of labels to the given pipeline actions.
        Existing labels are replaced.
      operationId: ApplyLabelsToActions
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateActionLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /actions/labels/remove:
    post:
      summary: Remove labels from actions
      description: Removes the given list of labels from the given pipeline actions.
      operationId: RemoveLabelsFromActions
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateActionLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /actions/types:
    get:
      summary: List action event types
      description: Lists the supported event types that trigger a pipeline action.
        Append `?workspaceId` to list event types in a workspace context.
      operationId: ListActionTypes
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventTypesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /actions/validate:
    get:
      summary: Validate action name
      description: Confirms the validity of the given action name. Append `?name=<your_action_name>`.
      operationId: ValidateActionName
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Action name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /actions/{actionId}:
    get:
      summary: Describe action
      description: Retrieves the details of the pipeline action identified by the
        given `actionId`.
      operationId: DescribeAction
      parameters:
      - name: actionId
        in: path
        description: Action string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: attributes
        in: query
        description: "Additional attribute values to include in the response (`labels`).\
          \ Returns an empty value (`labels: null`) if omitted."
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ActionQueryAttribute'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeActionResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update action
      description: Updates the details of the action identified by the given `actionId`.
        The `source` of an existing action cannot be changed.
      operationId: UpdateAction
      parameters:
      - name: actionId
        in: path
        description: Action string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Action update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete action
      description: Deletes the pipeline action identified by the given `actionId`.
      operationId: DeleteAction
      parameters:
      - name: actionId
        in: path
        description: Action string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /actions/{actionId}/launch:
    post:
      summary: Trigger Tower Launch action
      description: Triggers the execution of the Tower Launch action identified by
        the given `actionId`.
      operationId: LaunchAction
      parameters:
      - name: actionId
        in: path
        description: Action string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Action launch request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchActionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchActionResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /actions/{actionId}/pause:
    post:
      summary: Pause or resume action
      description: Pauses or resumes the pipeline action identified by the given `actionId`.
      operationId: PauseAction
      parameters:
      - name: actionId
        in: path
        description: Action string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /avatars:
    post:
      summary: Create the avatar image
      operationId: CreateAvatar
      requestBody:
        description: Image file request
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAvatarResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /avatars/{avatarId}:
    get:
      summary: Download the avatar image
      operationId: DownloadAvatar
      parameters:
      - name: avatarId
        in: path
        description: Avatar string identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "404":
          description: Not found element
      security:
      - BearerAuth: []
  /compute-envs:
    get:
      summary: List compute environments
      description: "Lists all available Tower compute environments in a user context.\
        \ Append `?workspaceId` to list compute environments in a workspace context,\
        \ and `?status` to filter by compute environment status."
      operationId: ListComputeEnvs
      parameters:
      - name: status
        in: query
        description: Compute environment status
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComputeEnvsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create compute environment
      description: Creates a new Tower compute environment. Append `?workspaceId`
        to create the environment in a workspace context.
      operationId: CreateComputeEnv
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Compute environment create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComputeEnvRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateComputeEnvResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /compute-envs/validate:
    get:
      summary: Validate compute environment name
      description: Confirms the validity of the given compute environment name in
        a user context. Append `?name=<your_ce_name>`.
      operationId: ValidateComputeEnvName
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Compute environment name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /compute-envs/{computeEnvId}:
    get:
      summary: Describe compute environment
      description: Retrieves the details of the Tower compute environment identified
        by the given `computeEnvId`.
      operationId: DescribeComputeEnv
      parameters:
      - name: computeEnvId
        in: path
        description: Compute environment string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: attributes
        in: query
        description: "Additional attribute values to include in the response (`labels`).\
          \ Returns an empty value (`labels: null`) if omitted."
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ComputeEnvQueryAttribute'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeComputeEnvResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update compute environment
      description: Updates the details of the compute environment identified by the
        given `computeEnvId`.
      operationId: UpdateComputeEnv
      parameters:
      - name: computeEnvId
        in: path
        description: Compute environment string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Compute environment update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComputeEnvRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      summary: Delete compute environment
      description: Deletes the Tower compute environment identified by the given `computeEnvId`.
      operationId: DeleteComputeEnv
      parameters:
      - name: computeEnvId
        in: path
        description: Compute environment string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Conflicting deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /compute-envs/{computeEnvId}/primary:
    post:
      summary: Define primary compute environment
      description: Selects the compute environment identified by the given `computeEnvId`
        as the primary compute environment in the given workspace context.
      operationId: UpdateComputeEnvPrimary
      parameters:
      - name: computeEnvId
        in: path
        description: Compute environment string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /credentials:
    get:
      summary: List credentials
      description: "Lists all available Tower credentials in a user context. Append\
        \ `?workspaceId` to list credentials in a workspace context, and `?platformId`\
        \ to filter credentials by computing platform."
      operationId: ListCredentials
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: platformId
        in: query
        description: Platform string identifier
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCredentialsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create credentials
      description: Creates new Tower credentials in a user context. Append `?workspaceId`
        to create the credentials in a workspace context.
      operationId: CreateCredentials
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCredentialsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCredentialsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /credentials/validate:
    get:
      summary: Validate credential name
      description: Validates the given credentials name. Append `?name=<your_credential_name>`.
      operationId: ValidateCredentialsName
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Credentials name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /credentials/{credentialsId}:
    get:
      summary: Describe credentials
      description: Retrieves the details of the credentials identified by the given
        `credentialsId`.
      operationId: DescribeCredentials
      parameters:
      - name: credentialsId
        in: path
        description: Credentials string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCredentialsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update credentials
      description: Updates the details of the credentials identified by the given
        `credentialsId`.
      operationId: UpdateCredentials
      parameters:
      - name: credentialsId
        in: path
        description: Credentials string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete credentials
      description: Deletes the credentials identified by the given `credentialsId`.
      operationId: DeleteCredentials
      parameters:
      - name: credentialsId
        in: path
        description: Credentials string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /ga4gh/wes/v1/runs:
    get:
      summary: GA4GH list runs
      operationId: GaRunList
      parameters:
      - name: page_size
        in: query
        description: Page size
        schema:
          type: integer
          format: int32
      - name: page_token
        in: query
        description: Page token
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunListResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WesErrorResponse'
        "403":
          description: Operation not allowed
    post:
      summary: GA4GH create a new run
      operationId: GaRunCreate
      requestBody:
        description: Run request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RunRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunId'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WesErrorResponse'
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}:
    get:
      summary: GA4GH describe run
      operationId: GaRunDescribe
      parameters:
      - name: run_id
        in: path
        description: Run string identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunLog'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WesErrorResponse'
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/cancel:
    post:
      summary: GA4GH cancel a run
      operationId: GaRunCancel
      parameters:
      - name: run_id
        in: path
        description: Run string identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunId'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WesErrorResponse'
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/status:
    get:
      summary: GA4GH retrieve run status
      operationId: GaRunStatus
      parameters:
      - name: run_id
        in: path
        description: Run string identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunStatus'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WesErrorResponse'
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/service-info:
    get:
      summary: GA4GH service info
      operationId: GaServiceInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WesErrorResponse'
        "403":
          description: Operation not allowed
  /labels:
    get:
      summary: List labels
      description: Lists all available labels in a user context. Append `?workspaceId`
        to list labels in a workspace context.
      operationId: ListLabels
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination max results
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Filter search parameter
        schema:
          type: string
      - name: type
        in: query
        description: Label type
        schema:
          $ref: '#/components/schemas/LabelType'
      - name: isDefault
        in: query
        description: Label default flag
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create label
      description: "Creates a new label in a user context. Append `?workspaceId` to\
        \ create the label in a workspace context. Resource labels include `resource:\
        \ true` and a `value`."
      operationId: CreateLabel
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: "Provide a label `name`. Set `resource: true` for resource labels.\
          \ Only resource labels have a `value` — if `resource: true`, include a `value`.\
          \ Else, omit `value` from your request body."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLabelResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /labels/{labelId}:
    put:
      summary: Update label
      description: Updates the label identified by the given `labelId`.
      operationId: UpdateLabel
      parameters:
      - name: labelId
        in: path
        description: Label numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Label update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLabelRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLabelResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete label
      description: Deletes the label identified by the given `labelId`.
      operationId: DeleteLabel
      parameters:
      - name: labelId
        in: path
        description: Label numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /launch/{launchId}:
    get:
      summary: Describe Launch record
      description: Retrieves the details of the launch identified by the given `launchId`.
      operationId: DescribeLaunch
      parameters:
      - name: launchId
        in: path
        description: Launch string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /launch/{launchId}/datasets:
    get:
      summary: Describe launch datasets
      description: Retrieves the details of the datasets used in the launch identified
        by the given `launchId`.
      operationId: ListLaunchDatasetVersions
      parameters:
      - name: launchId
        in: path
        description: Launch string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs:
    get:
      summary: List organizations
      description: Lists all available organizations in a user context.
      operationId: ListOrganizations
      parameters:
      - name: role
        in: query
        description: Organization user role identifier
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create organization
      description: Creates a new organization.
      operationId: CreateOrganization
      requestBody:
        description: Organization create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /orgs/validate:
    get:
      summary: Validate organization name
      description: Confirms the validity of the given organization name. Append `?name=<your_org_name>`.
      operationId: ValidateOrganizationName
      parameters:
      - name: name
        in: query
        description: Organization name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /orgs/{orgId}:
    get:
      summary: Describe organization
      description: Retrieves the details of the organization identified by the given
        `orgId`.
      operationId: DescribeOrganization
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update organization
      description: Updates the details of the organization identified by the given
        `orgId`.
      operationId: UpdateOrganization
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Organization update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      summary: Delete organization
      description: Deletes the organization identified by the given `orgId`.
      operationId: DeleteOrganization
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/collaborators:
    get:
      summary: List organization collaborators
      description: Lists the collaborators of the organization identified by the given
        `orgId`.
      operationId: ListOrganizationCollaborators
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination result max result
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Filter search parameter
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/members:
    get:
      summary: List organization members
      description: Lists the members of the organization identified by the given `orgId`.
      operationId: ListOrganizationMembers
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination result max result
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Filter search parameter
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/members/add:
    put:
      summary: Add organization member
      description: Adds a new member to the organization identified by the given `orgId`.
      operationId: CreateOrganizationMember
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Member addition request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMemberRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMemberResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /orgs/{orgId}/members/leave:
    delete:
      summary: Leave organization
      description: Removes the requesting user from the organization identified by
        the given `orgId`.
      operationId: LeaveOrganization
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/members/{memberId}:
    delete:
      summary: Delete member
      description: Deletes the member identified by the given `memberId`.
      operationId: DeleteOrganizationMember
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: memberId
        in: path
        description: Organization member numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/members/{memberId}/role:
    put:
      summary: Update member role
      description: Updates the role of the member identified by the given `memberId`.
      operationId: UpdateOrganizationMemberRole
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: memberId
        in: path
        description: Organization member numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Member role update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberRoleRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/teams:
    get:
      summary: List organization teams
      description: Lists all teams in the organization identified by the given `orgId`.
      operationId: ListOrganizationTeams
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination result max result
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Filter search parameter
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create team
      description: Creates a new team in the organization identified by the given
        `orgId`.
      operationId: CreateOrganizationTeam
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /orgs/{orgId}/teams/validate:
    get:
      summary: Validate team name
      description: Confirms the validity of the given team name. Append `?name=<your_team_name>`.
      operationId: ValidateTeamName
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Organization name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}:
    get:
      summary: Describe team
      description: Retrieves the details of the team identified by the given `teamId`.
      operationId: DescribeOrganizationTeam
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        description: Team numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTeamResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update team
      description: Updates the details of the team identified by the given `teamId`.
      operationId: UpdateOrganizationTeam
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        description: Team numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Team update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "204":
          description: UpdateOrganizationTeam 204 response
      security:
      - BearerAuth: []
    delete:
      summary: Delete team
      description: Deletes the team identified by the given `teamId`.
      operationId: DeleteOrganizationTeam
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        description: Team numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members:
    get:
      summary: List team members
      description: Lists the team members associated with the given `teamId`.
      operationId: ListOrganizationTeamMembers
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        description: Team numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: search
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create team member
      description: Adds a new member to the team identified by the given `teamId`.
      operationId: CreateOrganizationTeamMember
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        description: Team numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamMemberRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTeamMemberResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members/{memberId}/delete:
    delete:
      summary: Delete team member
      description: Deletes the team member identified by the given `memberId`.
      operationId: DeleteOrganizationTeamMember
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        description: Team numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: memberId
        in: path
        description: Member numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/workspaces:
    get:
      summary: List team workspaces
      description: Lists all the workspaces of which the given `teamId` is a participant.
      operationId: ListWorkspacesByTeam
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        description: Team numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination max results
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Paginantion offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Search criteria
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/workspaces:
    get:
      summary: List organization workspaces
      description: Lists the organization workspaces in `orgId` to which the requesting
        user belongs.
      operationId: ListWorkspaces
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create workspace
      description: Creates a new organization workspace.
      operationId: CreateWorkspace
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Workspace create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /orgs/{orgId}/workspaces/validate:
    get:
      summary: Validate workspace name
      description: Confirms the validity of the given workspace name. Append `?name=<your_workspace_name>`.
      operationId: WorkspaceValidate
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}:
    get:
      summary: Describe workspace
      description: Retrieves the details of the workspace identified by the given
        `workspaceId`.
      operationId: DescribeWorkspace
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update workspace
      description: Updates the details of the workspace identified by the given `workspaceId`.
      operationId: UpdateWorkspace
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Duplicate name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete workspace
      description: Deletes the workspace identified by the given `workspaceId`.
      operationId: DeleteWorkspace
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants:
    get:
      summary: List workspace participants
      description: Lists the participants of the workspace identified by the given
        `workspaceId`.
      operationId: ListWorkspaceParticipants
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination result max result
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Filter search parameter
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParticipantsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Leave workspace
      description: Removes the requesting user from the given workspace.
      operationId: LeaveWorkspaceParticipant
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/add:
    put:
      summary: Create workspace participant
      description: Adds a new participant to the workspace identified by the given
        `workspaceId`.
      operationId: CreateWorkspaceParticipant
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Participant addition request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParticipantRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddParticipantResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}:
    delete:
      summary: Delete workspace participant
      description: Deletes the given participant from the given workspace.
      operationId: DeleteWorkspaceParticipant
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: participantId
        in: path
        description: Participant numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}/role:
    put:
      summary: Update participant role
      description: Updates the role of the given participant in the given workspace.
      operationId: UpdateWorkspaceParticipantRole
      parameters:
      - name: orgId
        in: path
        description: Organization numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: participantId
        in: path
        description: Participant numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Participant role update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParticipantRoleRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipeline-secrets:
    get:
      summary: List pipeline secrets
      description: Lists all available pipeline secrets in a user context. Append
        `?workspaceId` to list secrets in a workspace context.
      operationId: ListPipelineSecrets
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineSecretsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create pipeline secret
      description: Creates a new pipeline secret in the user context. Append `?workspaceId`
        to create the secret in a workspace context.
      operationId: CreatePipelineSecret
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Pipeline secret create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineSecretRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineSecretResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipeline-secrets/validate:
    get:
      summary: Validate secret name
      description: Confirms the validity of the given pipeline secret name in a user
        context. Append `?name=<your_secret_name>`. Append `?workspaceId` to validate
        the name in a workspace context.
      operationId: ValidatePipelineSecretName
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Secret name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /pipeline-secrets/{secretId}:
    get:
      summary: Describe pipeline secret
      description: Retrieves the details of the pipeline secret identified by the
        given `secretId`.
      operationId: DescribePipelineSecret
      parameters:
      - name: secretId
        in: path
        description: Secret numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineSecretResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update secret
      description: Updates the pipeline secret identified by the given `secretId`.
      operationId: UpdatePipelineSecret
      parameters:
      - name: secretId
        in: path
        description: Secret numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Secret update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineSecretRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete secret
      description: Deletes the pipeline secret identified by the given `secretId`.
      operationId: DeletePipelineSecret
      parameters:
      - name: secretId
        in: path
        description: Secret numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines:
    get:
      summary: List pipelines
      description: "Lists all available pipelines in a user context, enriched by `attributes`.\
        \ Append `workspaceId` to list pipelines in a workspace context."
      operationId: ListPipelines
      parameters:
      - name: attributes
        in: query
        description: "Additional attribute values to include in the response (`labels`,\
          \ `optimized` status, `computeEnv`). Returns an empty value (`labels: null`,\
          \ etc.) if omitted."
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/PipelineQueryAttribute'
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination max results
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Filter search parameter
        schema:
          type: string
      - name: visibility
        in: query
        description: Filter visibility parameter
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create pipeline
      description: Creates a new pipeline in a user context. Append `?workspaceId`
        to create the pipeline in a workspace context.
      operationId: CreatePipeline
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Pipeline creation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /pipelines/info:
    get:
      summary: Describe remote pipeline repository
      description: Retrieves the details of a remote Nextflow pipeline Git repository.
        Append the repository name or full URL with `?name`.
      operationId: DescribePipelineRepository
      parameters:
      - name: name
        in: query
        description: Pipeline repository name or URL
        schema:
          type: string
      - name: revision
        in: query
        description: Pipeline revision
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineInfoResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines/labels/add:
    post:
      summary: Add labels to pipelines
      description: Adds the given list of labels to the given pipelines.
      operationId: AddLabelsToPipelines
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePipelineLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines/labels/apply:
    post:
      summary: Apply labels to pipelines
      description: Applies the given list of labels to the given pipelines. Existing
        labels are replaced.
      operationId: ApplyLabelsToPipelines
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePipelineLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines/labels/remove:
    post:
      summary: Remove labels from pipelines
      description: Removes the given list of labels from the given pipelines.
      operationId: RemoveLabelsFromPipelines
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePipelineLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines/repositories:
    get:
      summary: List user pipeline repositories
      description: "Lists known Nextflow pipeline Git repositories, extracted from\
        \ existing runs. Append `?workspaceId` to list repositories in a workspace\
        \ context."
      operationId: ListPipelineRepositories
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineInfoResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines/validate:
    get:
      summary: Validate pipeline name
      description: Confirms the validity of the given pipeline `name` in a user context.
        Append `?name=<your_pipeline_name>`. Append `?workspaceId` to validate the
        name in a workspace context.
      operationId: ValidatePipelineName
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: orgId
        in: query
        description: Organization numeric identifier
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Pipeline name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /pipelines/{pipelineId}:
    get:
      summary: Describe pipeline
      description: "Retrieves the details of the pipeline identified by the given\
        \ `pipelineId`, enriched by `attributes`."
      operationId: DescribePipeline
      parameters:
      - name: pipelineId
        in: path
        description: Pipeline numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: attributes
        in: query
        description: "Additional attribute values to include in the response (`labels`,\
          \ `optimized` status, `computeEnv`). Returns an empty value (`labels: null`,\
          \ etc.) if omitted."
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/PipelineQueryAttribute'
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: sourceWorkspaceId
        in: query
        description: Source workspace numeric identifier
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    put:
      summary: Update pipeline
      description: Updates the details of the pipeline identified by the given `pipelineId`.
      operationId: UpdatePipeline
      parameters:
      - name: pipelineId
        in: path
        description: Pipeline numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Pipeline update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipelineResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      summary: Delete pipeline
      description: Deletes the pipeline identified by the given `pipelineId`.
      operationId: DeletePipeline
      parameters:
      - name: pipelineId
        in: path
        description: Pipeline numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines/{pipelineId}/launch:
    get:
      summary: Describe pipeline launch
      description: Retrieves the launch details of the pipeline identified by the
        given `pipelineId`.
      operationId: DescribePipelineLaunch
      parameters:
      - name: pipelineId
        in: path
        description: Pipeline numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: sourceWorkspaceId
        in: query
        description: Source workspace numeric identifier
        required: false
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /pipelines/{pipelineId}/schema:
    get:
      summary: Describe pipeline schema
      description: "Retrieves the pipeline schema of the pipeline identified by the\
        \ given `pipelineId`, enriched by `attributes`."
      operationId: DescribePipelineSchema
      parameters:
      - name: pipelineId
        in: path
        description: Pipeline numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: sourceWorkspaceId
        in: query
        description: Source workspace numeric identifier
        required: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: attributes
        in: query
        description: "Attribute values to include in the response: `schema` returns\
          \ the pipeline schema, `params` returns the pipeline config. Returns all\
          \ if `attributes` is omitted."
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/PipelineSchemaAttributes'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineSchemaResponse'
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /platforms:
    get:
      summary: List platforms
      description: Lists all available computing platforms in a user context. Append
        `?workspaceId` to list platforms in a workspace context.
      operationId: ListPlatforms
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlatformsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /platforms/{platformId}:
    get:
      summary: Describe platform
      description: Retrieves the details of the computing platform identified by the
        given `platformId`.
      operationId: DescribePlatform
      parameters:
      - name: platformId
        in: path
        description: Platform string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: regionId
        in: query
        required: true
        schema:
          type: string
      - name: credentialsId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePlatformResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /platforms/{platformId}/regions:
    get:
      summary: List platform regions
      description: Lists the available regions for the computing platform identified
        by the given `platformId`.
      operationId: ListPlatformRegions
      parameters:
      - name: platformId
        in: path
        description: Platform string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /service-info:
    get:
      summary: General Tower service features and version
      operationId: Info
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfoResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /tokens:
    get:
      summary: List all available API tokens
      operationId: TokenList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessTokensResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create an API token
      operationId: CreateToken
      requestBody:
        description: Access token create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessTokenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessTokenResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /tokens/delete-all:
    delete:
      summary: Delete all user API tokens
      operationId: DeleteAllTokens
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /tokens/{tokenId}:
    delete:
      summary: Delete an API token
      operationId: DeleteToken
      parameters:
      - name: tokenId
        in: path
        description: Token numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /trace/create:
    post:
      summary: Create a new Workflow execution trace
      operationId: CreateTrace
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Trace create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceCreateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceCreateResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /trace/{workflowId}/begin:
    put:
      summary: Signal the Workflow execution has started
      operationId: UpdateTraceBegin
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Trace begin request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceBeginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceBeginResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /trace/{workflowId}/complete:
    put:
      summary: Signal the Workflow execution has completed
      operationId: UpdateTraceComplete
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Trace complete request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceCompleteRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceCompleteResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /trace/{workflowId}/heartbeat:
    put:
      summary: Period request to signal the execution is still on-going
      operationId: UpdateTraceHeartbeat
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Trace heartbeat request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceHeartbeatRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceHeartbeatResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /trace/{workflowId}/progress:
    put:
      summary: Store one or more task executions metadata for the specified Workflow
      operationId: UpdateTraceProgress
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Trace progress request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceProgressRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceProgressResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /user-info:
    get:
      summary: Describe current user
      operationId: UserInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /user/{userId}/workspaces:
    get:
      summary: List user workspaces and organizations
      description: Lists the workspaces and organizations to which the user identified
        by the given `userId` belongs.
      operationId: ListWorkspacesUser
      parameters:
      - name: userId
        in: path
        description: User numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesAndOrgResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /users/validate:
    get:
      summary: Check that the user name is valid
      operationId: ValidateUserName
      parameters:
      - name: name
        in: query
        description: User name to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /users/{userId}:
    get:
      summary: Describe a user entity
      operationId: DescribeUser
      parameters:
      - name: userId
        in: path
        description: User numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Update an user entity
      operationId: UpdateUser
      parameters:
      - name: userId
        in: path
        description: User numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: User update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDbDto'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete a user entity
      operationId: DeleteUser
      parameters:
      - name: userId
        in: path
        description: User numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow:
    get:
      summary: List workflows
      description: "Lists all workflow records, enriched with `attributes`. Append\
        \ `?workspaceId` to list workflow records in a workspace context."
      operationId: ListWorkflows
      parameters:
      - name: attributes
        in: query
        description: "Additional attribute values to include in the response (`labels`,\
          \ `optimized` status). Returns an empty value (`labels: null`) if omitted.\
          \ Specify `minimal` to remove non-essential fields (for use in UI only)."
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowQueryAttribute'
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination result max result
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: Filter search parameter
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/delete:
    post:
      summary: Delete workflows
      description: Deletes the workflow records identified by the given list of `workflowIds`.
      operationId: DeleteWorkflowMany
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: force
        in: query
        description: Force the deletion even if any workflows are active
        schema:
          type: boolean
      requestBody:
        description: Delete workflows request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkflowsRequest'
        required: true
      responses:
        "200":
          description: "OK - Return the IDs of workflows that could not be deleted,\
            \ if any"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkflowsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/labels/add:
    post:
      summary: Add labels to workflows
      description: Adds the given list of labels to the given workflows.
      operationId: AddLabelsToWorkflows
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWorkflowLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/labels/apply:
    post:
      summary: Apply labels to workflows
      description: Applies the given list of labels to the given workflows. Existing
        labels are replaced.
      operationId: ApplyLabelsToWorkflows
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWorkflowLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/labels/remove:
    post:
      summary: Remove labels from workflows
      description: Removes the given list of labels from the given workflows.
      operationId: RemoveLabelsFromWorkflows
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWorkflowLabelsRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/launch:
    post:
      summary: Launch workflow
      description: Submits a workflow execution.
      operationId: CreateWorkflowLaunch
      parameters:
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: sourceWorkspaceId
        in: query
        description: Source workspace numeric identifier
        schema:
          type: integer
          format: int64
          nullable: true
      requestBody:
        description: Workflow launch request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitWorkflowLaunchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitWorkflowLaunchResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/random-name:
    get:
      summary: Generates a random name
      operationId: GenerateRandomWorkflowName
      responses:
        "200":
          description: Generated name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomWorkflowNameResponse'
      security:
      - BearerAuth: []
  /workflow/validate:
    get:
      summary: "Check that the given run name of a workflow has a valid format. When\
        \ the session ID is given: check that no other workflow in the system exists\
        \ with the combination of both elements"
      operationId: ValidateWorkflowConstraints
      parameters:
      - name: runName
        in: query
        description: Workflow run name to validate
        schema:
          type: string
      - name: sessionId
        in: query
        description: Workflow session ID to validate
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request. Invalid run name format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Duplicated element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /workflow/{workflowId}:
    get:
      summary: Describe workflow
      description: Retrieves the details of the workflow record associated with the
        given `workflowId`.
      operationId: DescribeWorkflow
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: attributes
        in: query
        description: Comma-separated list of attributes to retrieve. Returns an empty
          value for each attribute not specified.
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowQueryAttribute'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkflowResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete the Workflow entity with the given ID
      operationId: DeleteWorkflow
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: force
        in: query
        description: Force the deletion even if the workflow is active
        schema:
          type: boolean
      responses:
        "204":
          description: OK - Not content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/cancel:
    post:
      summary: Cancel workflow
      description: Cancels the workflow execution identified by the given `workflowId`.
      operationId: CancelWorkflow
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/download:
    get:
      summary: Download workflow files
      description: Downloads the workflow files for the Nextflow main job associated
        with the given `workflowId`.
      operationId: DownloadWorkflowLog
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: Filename to download
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/download/{taskId}:
    get:
      summary: Download workflow task files
      description: Downloads the workflow files of the task identified by the given
        `taskId`.
      operationId: DownloadWorkflowTaskLog
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: Task numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: fileName
        in: query
        description: Filename to download
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/launch:
    get:
      summary: Describe workflow launch
      description: Retrieves the details of the workflow launch associated with the
        given `workflowId`.
      operationId: DescribeWorkflowLaunch
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkflowLaunchResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /workflow/{workflowId}/log:
    get:
      summary: Get workflow logs
      description: Retrieves the output logs for the Nextflow main job of the workflow
        identified by the given `workflowId`.
      operationId: WorkflowLogs
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: next
        in: query
        description: Workflow log cursor
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowLogResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/log/{taskId}:
    get:
      summary: Get workflow task logs
      description: Retrieves the output logs for the workflow task identified by the
        given `taskId`.
      operationId: GetWorkflowTaskLog
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: Task numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: next
        in: query
        description: Workflow log cursor
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowLogResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/metrics:
    get:
      summary: Get the execution metrics for the given Workflow ID
      operationId: DescribeWorkflowMetrics
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowMetricsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/progress:
    get:
      summary: Retrieve the execution progress for the given Workflow ID
      operationId: DescribeWorkflowProgress
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProgressResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/star:
    get:
      summary: Check workflow star status
      description: Confirms whether the given `workflowId` is starred.
      operationId: DescribeWorkflowStar
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowStarResponse'
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Star workflow
      description: Adds the workflow identified by the given `workflowId` to your
        list of starred workflows.
      operationId: CreateWorkflowStar
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowStarResponse'
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Unstar workflow
      description: Removes the workflow identified by the given `workflowId` from
        your list of starred workflows.
      operationId: DeleteWorkflowStar
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowStarResponse'
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /workflow/{workflowId}/task/{taskId}:
    get:
      summary: Describe a task entity with the given ID
      operationId: DescribeWorkflowTask
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: Task numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTaskResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workflow/{workflowId}/tasks:
    get:
      summary: List the tasks for the given Workflow ID and filter parameters
      operationId: ListWorkflowTasks
      parameters:
      - name: workflowId
        in: path
        description: Workflow string identifier
        required: true
        schema:
          type: string
      - name: workspaceId
        in: query
        description: Workspace numeric identifier
        schema:
          type: integer
          format: int64
      - name: max
        in: query
        description: Pagination result max result
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Pagination offset
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: Field to sort by
        schema:
          type: string
      - name: sortDir
        in: query
        description: Sorting direction (asc|desc)
        schema:
          type: string
      - name: search
        in: query
        description: Search tasks by name
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workspaces/{workspaceId}/datasets:
    get:
      summary: List available datasets
      description: Lists all available datasets in the workspace context identified
        by the given `workspaceId`.
      operationId: ListDatasets
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    post:
      summary: Create dataset
      description: Creates a new Tower dataset in the given workspace context. Include
        the dataset file and details in your request body.
      operationId: CreateDataset
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Dataset create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workspaces/{workspaceId}/datasets/versions:
    get:
      summary: List latest dataset versions
      description: Lists the latest version of each dataset associated with the given
        `workspaceId`.
      operationId: ListWorkspaceDatasetVersions
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: mimeType
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetVersionsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}:
    put:
      summary: Update dataset
      description: Updates the details of the dataset identified by the given `datasetId`.
      operationId: UpdateDataset
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: datasetId
        in: path
        description: Dataset string identifier
        required: true
        schema:
          type: string
      requestBody:
        description: Dataset update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetRequest'
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
    delete:
      summary: Delete dataset
      description: Deletes the dataset identified by the given `datasetId`.
      operationId: DeleteDataset
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: datasetId
        in: path
        description: Dataset string identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/metadata:
    get:
      summary: Describe dataset
      description: Retrieves the metadata of the dataset identified by the given `datasetId`.
      operationId: DescribeDataset
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: datasetId
        in: path
        description: Dataset string identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/upload:
    post:
      summary: Upload new dataset version
      description: Uploads the CSV or TSV content to create a new version of the dataset
        identified by the given `datasetId`.
      operationId: UploadDataset
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: datasetId
        in: path
        description: Dataset string identifier
        required: true
        schema:
          type: string
      - name: header
        in: query
        description: Uploaded file has header
        schema:
          type: boolean
      requestBody:
        description: Dataset file request
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiRequestFileSchema'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDatasetVersionResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      summary: Download dataset content
      description: Downloads the content of the dataset identified by the given `datasetId`
        and `version`.
      operationId: DownloadDataset
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: datasetId
        in: path
        description: Dataset string identifier
        required: true
        schema:
          type: string
      - name: version
        in: path
        description: Version number to download
        required: true
        schema:
          type: string
      - name: fileName
        in: path
        description: File name for the downloaded dataset content
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/versions:
    get:
      summary: List all dataset versions
      description: Lists all versions of the given `datasetId`.
      operationId: ListDatasetVersions
      parameters:
      - name: workspaceId
        in: path
        description: Workspace numeric identifier
        required: true
        schema:
          type: integer
          format: int64
      - name: datasetId
        in: path
        description: Dataset string identifier
        required: true
        schema:
          type: string
      - name: mimeType
        in: query
        description: Optional MIME type filter
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetVersionsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
components:
  schemas:
    AbstractGridConfig:
      type: object
      properties:
        workDir:
          type: string
        launchDir:
          type: string
        userName:
          type: string
        hostName:
          type: string
        port:
          type: integer
          format: int32
        headQueue:
          type: string
        computeQueue:
          type: string
        maxQueueSize:
          type: integer
          format: int32
        headJobOptions:
          type: string
        propagateHeadJobOptions:
          type: boolean
        preRunScript:
          type: string
        postRunScript:
          type: string
    AccessToken:
      required:
      - name
      type: object
      properties:
        basicAuth:
          type: string
          deprecated: true
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 50
          minLength: 1
          type: string
        lastUsed:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
    Action.ConfigType:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          github: '#/components/schemas/GithubActionConfig'
          tower: '#/components/schemas/Action.TowerActionConfig'
      oneOf:
      - $ref: '#/components/schemas/Action.TowerActionConfig'
      - $ref: '#/components/schemas/GithubActionConfig'
    Action.EventType:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
      discriminator:
        propertyName: discriminator
        mapping:
          github: '#/components/schemas/GithubActionEvent'
          tower: '#/components/schemas/Action.TowerActionEvent'
      oneOf:
      - $ref: '#/components/schemas/GithubActionEvent'
      - $ref: '#/components/schemas/Action.TowerActionEvent'
    Action.Source:
      type: string
      enum:
      - github
      - tower
    Action.Status:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - ERROR
      - PAUSED
    Action.TowerActionConfig:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
    Action.TowerActionEvent:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        workflowId:
          type: string
        discriminator:
          type: string
          readOnly: true
    ActionQueryAttribute:
      type: string
      enum:
      - labels
    ActionResponseDto:
      type: object
      properties:
        id:
          type: string
        launch:
          $ref: '#/components/schemas/Launch'
        name:
          type: string
        hookId:
          type: string
        hookUrl:
          type: string
        message:
          type: string
        source:
          $ref: '#/components/schemas/Action.Source'
        status:
          $ref: '#/components/schemas/Action.Status'
        config:
          $ref: '#/components/schemas/Action.ConfigType'
        event:
          $ref: '#/components/schemas/Action.EventType'
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDbDto'
    AddMemberRequest:
      type: object
      properties:
        user:
          type: string
    AddMemberResponse:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/MemberDbDto'
    AddParticipantRequest:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userNameOrEmail:
          type: string
        teamId:
          type: integer
          format: int64
    AddParticipantResponse:
      type: object
      properties:
        participant:
          $ref: '#/components/schemas/ParticipantDbDto'
    AddTeamMemberResponse:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/MemberDbDto'
    AgentSecurityKeys:
      type: object
      properties:
        connectionId:
          type: string
        workDir:
          type: string
        shared:
          type: boolean
        discriminator:
          type: string
          readOnly: true
    AltairPbsComputeConfig:
      title: Altair PBS configuration
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - type: object
        properties:
          environment:
            type: array
            items:
              $ref: '#/components/schemas/ConfigEnvVariable'
          discriminator:
            type: string
            description: property to select the compute config platform
            readOnly: true
    Analytics:
      type: object
      properties:
        url:
          type: string
        siteId:
          type: integer
          format: int32
    AssociateActionLabelsRequest:
      type: object
      properties:
        actionIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociatePipelineLabelsRequest:
      type: object
      properties:
        pipelineIds:
          type: array
          items:
            type: integer
            format: int64
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociateWorkflowLabelsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    Avatar:
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    AwsBatchConfig:
      title: AWS Batch configuration
      type: object
      properties:
        region:
          type: string
        computeQueue:
          type: string
        dragenQueue:
          type: string
        dragenInstanceType:
          type: string
        computeJobRole:
          type: string
        executionRole:
          type: string
        headQueue:
          type: string
        headJobRole:
          type: string
        cliPath:
          type: string
        volumes:
          type: array
          items:
            type: string
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        environment:
          type: array
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        nvnmeStorageEnabled:
          type: boolean
        logGroup:
          type: string
        forge:
          $ref: '#/components/schemas/ForgeConfig'
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
    AwsBatchPlatformMetainfo:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        jobQueues:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.JobQueue'
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Bucket'
        fileSystems:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.FsxFileSystem'
        efsFileSystems:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.EfsFileSystem'
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Vpc'
        images:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Image'
        securityGroups:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.SecurityGroup'
        subnets:
          type: array
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Subnet'
        instanceFamilies:
          type: array
          items:
            type: string
        allocStrategy:
          type: array
          items:
            type: string
    AwsBatchPlatformMetainfo.Bucket:
      type: object
      properties:
        path:
          type: string
    AwsBatchPlatformMetainfo.EfsFileSystem:
      type: object
      properties:
        id:
          type: string
    AwsBatchPlatformMetainfo.FsxFileSystem:
      type: object
      properties:
        id:
          type: string
        dns:
          type: string
        mount:
          type: string
    AwsBatchPlatformMetainfo.Image:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    AwsBatchPlatformMetainfo.JobQueue:
      required:
      - name
      - state
      type: object
      properties:
        name:
          type: string
        state:
          type: string
    AwsBatchPlatformMetainfo.SecurityGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        vpcId:
          type: string
    AwsBatchPlatformMetainfo.Subnet:
      type: object
      properties:
        id:
          type: string
        zone:
          type: string
        vpcId:
          type: string
    AwsBatchPlatformMetainfo.Vpc:
      type: object
      properties:
        id:
          type: string
        isDefault:
          type: boolean
    AwsSecurityKeys:
      type: object
      properties:
        accessKey:
          type: string
        secretKey:
          type: string
          writeOnly: true
        assumeRoleArn:
          type: string
        discriminator:
          type: string
          readOnly: true
    AzBatchConfig:
      title: Azure batch configuration
      type: object
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        region:
          type: string
        headPool:
          type: string
        autoPoolMode:
          type: boolean
          deprecated: true
        forge:
          $ref: '#/components/schemas/AzBatchForgeConfig'
        tokenDuration:
          type: string
        deleteJobsOnCompletion:
          $ref: '#/components/schemas/JobCleanupPolicy'
        deletePoolsOnCompletion:
          type: boolean
        environment:
          type: array
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
    AzBatchForgeConfig:
      type: object
      properties:
        vmType:
          type: string
        vmCount:
          type: integer
          format: int32
        autoScale:
          type: boolean
        disposeOnDeletion:
          type: boolean
        containerRegIds:
          type: array
          items:
            type: string
    AzureReposSecurityKeys:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    AzureSecurityKeys:
      type: object
      properties:
        batchName:
          type: string
        batchKey:
          type: string
          writeOnly: true
        storageName:
          type: string
        storageKey:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    BitBucketSecurityKeys:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    CloudPriceModel:
      type: string
      enum:
      - standard
      - spot
    CodeCommitSecurityKeys:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    ComputeConfig:
      type: object
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        environment:
          type: array
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          gke-platform: '#/components/schemas/GkeComputeConfig'
          google-batch: '#/components/schemas/GoogleBatchConfig'
          slurm-platform: '#/components/schemas/SlurmComputeConfig'
          k8s-platform: '#/components/schemas/K8sComputeConfig'
          altair-platform: '#/components/schemas/AltairPbsComputeConfig'
          lsf-platform: '#/components/schemas/LsfComputeConfig'
          moab-platform: '#/components/schemas/MoabComputeConfig'
          aws-batch: '#/components/schemas/AwsBatchConfig'
          azure-batch: '#/components/schemas/AzBatchConfig'
          eks-platform: '#/components/schemas/EksComputeConfig'
          google-lifesciences: '#/components/schemas/GoogleLifeSciencesConfig'
          uge-platform: '#/components/schemas/UnivaComputeConfig'
      oneOf:
      - $ref: '#/components/schemas/AwsBatchConfig'
      - $ref: '#/components/schemas/GoogleLifeSciencesConfig'
      - $ref: '#/components/schemas/GoogleBatchConfig'
      - $ref: '#/components/schemas/AzBatchConfig'
      - $ref: '#/components/schemas/LsfComputeConfig'
      - $ref: '#/components/schemas/SlurmComputeConfig'
      - $ref: '#/components/schemas/K8sComputeConfig'
      - $ref: '#/components/schemas/EksComputeConfig'
      - $ref: '#/components/schemas/GkeComputeConfig'
      - $ref: '#/components/schemas/UnivaComputeConfig'
      - $ref: '#/components/schemas/AltairPbsComputeConfig'
      - $ref: '#/components/schemas/MoabComputeConfig'
    ComputeEnv:
      required:
      - config
      - name
      - platform
      type: object
      properties:
        id:
          maxLength: 22
          type: string
          readOnly: true
        name:
          maxLength: 100
          type: string
        description:
          maxLength: 2000
          type: string
        platform:
          maxLength: 25
          type: string
          enum:
          - aws-batch
          - google-lifesciences
          - google-batch
          - azure-batch
          - k8s-platform
          - eks-platform
          - gke-platform
          - uge-platform
          - slurm-platform
          - lsf-platform
          - altair-platform
          - moab-platform
          - local-platform
        config:
          $ref: '#/components/schemas/ComputeConfig'
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/ComputeEnv.Status'
          - type: string
            readOnly: true
        message:
          maxLength: 4096
          type: string
        primary:
          type: boolean
          readOnly: true
        credentialsId:
          type: string
        orgId:
          type: integer
          format: int64
          readOnly: true
        workspaceId:
          type: integer
          format: int64
          readOnly: true
    ComputeEnv.Status:
      type: string
      readOnly: true
      enum:
      - CREATING
      - AVAILABLE
      - ERRORED
      - INVALID
    ComputeEnvDbDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        region:
          type: string
    ComputeEnvQueryAttribute:
      type: string
      enum:
      - labels
    ComputeEnvResponseDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        platform:
          type: string
          enum:
          - aws-batch
          - google-lifesciences
          - google-batch
          - azure-batch
          - k8s-platform
          - eks-platform
          - gke-platform
          - uge-platform
          - slurm-platform
          - lsf-platform
          - altair-platform
        config:
          $ref: '#/components/schemas/ComputeConfig'
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        lastUsed:
          type: string
          format: date-time
        deleted:
          type: boolean
        status:
          $ref: '#/components/schemas/ComputeEnv.Status'
        message:
          type: string
        primary:
          type: boolean
        credentialsId:
          type: string
        orgId:
          type: integer
          format: int64
        workspaceId:
          type: integer
          format: int64
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDbDto'
    ComputePlatform:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        credentialsProviders:
          type: array
          items:
            type: string
    ComputePlatformDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ComputeRegion:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ConfigEnvVariable:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        head:
          type: boolean
        compute:
          type: boolean
    ContainerRegistryKeys:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
          writeOnly: true
        registry:
          type: string
        discriminator:
          type: string
          readOnly: true
    CreateAccessTokenRequest:
      type: object
      properties:
        name:
          type: string
    CreateAccessTokenResponse:
      type: object
      properties:
        accessKey:
          type: string
        token:
          $ref: '#/components/schemas/AccessToken'
    CreateActionRequest:
      type: object
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/Action.Source'
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
    CreateActionResponse:
      type: object
      properties:
        actionId:
          type: string
    CreateAvatarResponse:
      type: object
      properties:
        avatar:
          $ref: '#/components/schemas/Avatar'
        url:
          type: string
    CreateComputeEnvRequest:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/ComputeEnv'
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    CreateComputeEnvResponse:
      type: object
      properties:
        computeEnvId:
          type: string
    CreateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
    CreateCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    CreateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CreateDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Dataset'
    CreateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
    CreateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
    CreateOrganizationRequest:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
        logoId:
          type: string
    CreateOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationDbDto'
    CreatePipelineRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    CreatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDbDto'
    CreatePipelineSecretRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    CreatePipelineSecretResponse:
      type: object
      properties:
        secretId:
          type: integer
          format: int64
    CreateTeamMemberRequest:
      type: object
      properties:
        userNameOrEmail:
          type: string
    CreateTeamRequest:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/Team'
        avatarId:
          type: string
    CreateTeamResponse:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/TeamDbDto'
    CreateWorkflowStarResponse:
      type: object
      properties:
        workflowId:
          type: string
    CreateWorkspaceRequest:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
    CreateWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
    Credentials:
      required:
      - name
      - provider
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          type: string
        description:
          type: string
        provider:
          maxLength: 16
          type: string
          enum:
          - aws
          - azure
          - google
          - github
          - gitlab
          - bitbucket
          - ssh
          - k8s
          - container-reg
          - tw-agent
          - codecommit
          - gitea
          - azurerepos
        baseUrl:
          maxLength: 200
          pattern: ""
          type: string
        category:
          maxLength: 20
          type: string
        deleted:
          type: boolean
          readOnly: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        keys:
          $ref: '#/components/schemas/SecurityKeys'
    Dataset:
      required:
      - name
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,98}$"
          type: string
        description:
          maxLength: 1000
          type: string
        mediaType:
          maxLength: 80
          type: string
        deleted:
          type: boolean
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    DatasetVersionDbDto:
      type: object
      properties:
        datasetId:
          type: string
        datasetName:
          type: string
        datasetDescription:
          type: string
        hasHeader:
          type: boolean
        version:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        fileName:
          type: string
        mediaType:
          type: string
        url:
          type: string
    DeleteWorkflowsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
    DeleteWorkflowsResponse:
      type: object
      properties:
        failedWorkflowIds:
          type: array
          items:
            type: string
    DescribeActionResponse:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ActionResponseDto'
    DescribeComputeEnvResponse:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/ComputeEnvResponseDto'
    DescribeCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
    DescribeDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Dataset'
    DescribeLaunchResponse:
      type: object
      properties:
        launch:
          $ref: '#/components/schemas/Launch'
    DescribeOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationDbDto'
    DescribePipelineInfoResponse:
      type: object
      properties:
        pipelineInfo:
          $ref: '#/components/schemas/PipelineInfo'
    DescribePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDbDto'
    DescribePipelineSecretResponse:
      type: object
      properties:
        pipelineSecret:
          $ref: '#/components/schemas/PipelineSecret'
    DescribePlatformResponse:
      type: object
      properties:
        metainfo:
          $ref: '#/components/schemas/PlatformMetainfo'
    DescribeTaskResponse:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/Task'
    DescribeTeamResponse:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/TeamDbDto'
    DescribeUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDbDto'
        needConsent:
          type: boolean
        defaultWorkspaceId:
          type: integer
          format: int64
    DescribeWorkflowLaunchResponse:
      type: object
      properties:
        launch:
          $ref: '#/components/schemas/WorkflowLaunchResponse'
    DescribeWorkflowResponse:
      type: object
      properties:
        progress:
          $ref: '#/components/schemas/ProgressData'
        orgId:
          type: integer
          format: int64
        optimized:
          type: boolean
        platform:
          $ref: '#/components/schemas/ComputePlatformDto'
        jobInfo:
          $ref: '#/components/schemas/JobInfoDto'
        orgName:
          type: string
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDbDto'
        workflow:
          $ref: '#/components/schemas/Workflow'
        workspaceId:
          type: integer
          format: int64
    DescribeWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
    EksComputeConfig:
      title: Amazon EKS cluster configuration
      allOf:
      - $ref: '#/components/schemas/K8sComputeConfig'
      - type: object
        properties:
          region:
            type: string
            description: AWS region
          clusterName:
            type: string
            description: The AWS EKS cluster name
          environment:
            type: array
            items:
              $ref: '#/components/schemas/ConfigEnvVariable'
          waveEnabled:
            type: boolean
          fusion2Enabled:
            type: boolean
          discriminator:
            type: string
            description: property to select the compute config platform
            readOnly: true
    EmptyBodyRequest:
      type: object
    ErrorResponse:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    EventType:
      type: object
      properties:
        source:
          type: string
        display:
          type: string
        description:
          type: string
        enabled:
          type: boolean
    ForgeConfig:
      type: object
      properties:
        type:
          type: string
          enum:
          - SPOT
          - EC2
        minCpus:
          type: integer
          format: int32
        maxCpus:
          type: integer
          format: int32
        gpuEnabled:
          type: boolean
        ebsAutoScale:
          type: boolean
        instanceTypes:
          type: array
          items:
            type: string
        allocStrategy:
          type: string
          enum:
          - BEST_FIT
          - BEST_FIT_PROGRESSIVE
          - SPOT_CAPACITY_OPTIMIZED
          - SPOT_PRICE_CAPACITY_OPTIMIZED
        imageId:
          type: string
        vpcId:
          type: string
        subnets:
          type: array
          items:
            type: string
        securityGroups:
          type: array
          items:
            type: string
        fsxMount:
          type: string
        fsxName:
          type: string
        fsxSize:
          type: integer
          format: int32
        disposeOnDeletion:
          type: boolean
        ec2KeyPair:
          type: string
        allowBuckets:
          type: array
          items:
            type: string
        ebsBlockSize:
          type: integer
          format: int32
        fusionEnabled:
          type: boolean
        bidPercentage:
          type: integer
          format: int32
        efsCreate:
          type: boolean
        efsId:
          type: string
        efsMount:
          type: string
        dragenEnabled:
          type: boolean
        dragenAmiId:
          type: string
        ebsBootSize:
          type: integer
          format: int32
        ecsConfig:
          type: string
        fargateHeadEnabled:
          type: boolean
        arm64Enabled:
          type: boolean
        dragenInstanceType:
          type: string
    GetProgressResponse:
      type: object
      properties:
        progress:
          $ref: '#/components/schemas/ProgressData'
    GetWorkflowMetricsResponse:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowMetrics'
    GitHubSecurityKeys:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    GitLabSecurityKeys:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    GiteaSecurityKeys:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    GithubActionConfig:
      type: object
      properties:
        events:
          type: array
          items:
            type: string
        discriminator:
          type: string
          readOnly: true
    GithubActionEvent:
      type: object
      properties:
        ref:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        pusherName:
          type: string
        pusherEmail:
          type: string
        timestamp:
          type: string
          format: date-time
        discriminator:
          type: string
          readOnly: true
    GkeComputeConfig:
      title: Google GKE cluster configuration
      allOf:
      - $ref: '#/components/schemas/K8sComputeConfig'
      - type: object
        properties:
          region:
            type: string
            description: The GKE cluster region - or - zone
          clusterName:
            type: string
            description: The GKE cluster name
          environment:
            type: array
            items:
              $ref: '#/components/schemas/ConfigEnvVariable'
          fusion2Enabled:
            type: boolean
          waveEnabled:
            type: boolean
          discriminator:
            type: string
            description: property to select the compute config platform
            readOnly: true
    GoogleBatchConfig:
      title: Google Batch service configuration
      type: object
      properties:
        location:
          type: string
        workDir:
          type: string
        spot:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        cpuPlatform:
          type: string
        machineType:
          type: string
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        serviceAccount:
          type: string
        network:
          type: string
        subnetwork:
          type: string
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
    GoogleLifeSciencesConfig:
      title: Google life sciences configuration
      type: object
      properties:
        region:
          type: string
        zones:
          type: array
          items:
            type: string
        location:
          type: string
        workDir:
          type: string
        preemptible:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
    GooglePlatformMetainfo:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        zones:
          type: array
          items:
            type: string
        locations:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/GooglePlatformMetainfo.Bucket'
        filestores:
          type: array
          items:
            $ref: '#/components/schemas/GooglePlatformMetainfo.Filestore'
    GooglePlatformMetainfo.Bucket:
      type: object
      properties:
        path:
          type: string
    GooglePlatformMetainfo.Filestore:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        target:
          type: string
    GoogleSecurityKeys:
      type: object
      properties:
        data:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    Iterator_String_:
      type: object
    JobCleanupPolicy:
      type: string
      enum:
      - on_success
      - always
      - never
    JobInfoDto:
      type: object
      properties:
        operationId:
          type: string
        exitCode:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        status:
          type: string
        message:
          type: string
    K8sComputeConfig:
      title: Kubernetes compute configuration
      type: object
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        server:
          type: string
        sslCert:
          type: string
        namespace:
          type: string
        computeServiceAccount:
          type: string
        headServiceAccount:
          type: string
        storageClaimName:
          type: string
        storageMountPath:
          type: string
        podCleanup:
          $ref: '#/components/schemas/PodCleanupPolicy'
        headPodSpec:
          type: string
        servicePodSpec:
          type: string
        environment:
          type: array
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
    K8sSecurityKeys:
      type: object
      properties:
        certificate:
          type: string
        privateKey:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    LabelDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
    LabelType:
      type: string
      enum:
      - simple
      - resource
      - all
    Launch:
      required:
      - dateCreated
      - pipeline
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        computeEnv:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ComputeEnv'
        pipeline:
          maxLength: 200
          type: string
        workDir:
          type: string
        revision:
          maxLength: 100
          type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          maxLength: 200
          type: string
        entryName:
          maxLength: 80
          type: string
        schemaName:
          maxLength: 100
          pattern: "[\\p{Graph}&&[^/]]\\p{Graph}+"
          type: string
        resume:
          type: boolean
        resumeLaunchId:
          maxLength: 22
          type: string
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        sessionId:
          maxLength: 36
          type: string
        runName:
          maxLength: 80
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        optimizationId:
          maxLength: 32
          type: string
        optimizationTargets:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    LaunchActionRequest:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
    LaunchActionResponse:
      type: object
      properties:
        workflowId:
          type: string
    ListAccessTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/AccessToken'
    ListActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ListActionsResponse.ActionInfo'
    ListActionsResponse.ActionInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pipeline:
          type: string
        source:
          $ref: '#/components/schemas/Action.Source'
        status:
          $ref: '#/components/schemas/Action.Status'
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        event:
          $ref: '#/components/schemas/Action.EventType'
        endpoint:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDbDto'
        usageCmd:
          type: string
    ListComputeEnvsResponse:
      type: object
      properties:
        computeEnvs:
          type: array
          items:
            $ref: '#/components/schemas/ListComputeEnvsResponse.Entry'
    ListComputeEnvsResponse.Entry:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        status:
          $ref: '#/components/schemas/ComputeEnv.Status'
        message:
          type: string
        lastUsed:
          type: string
          format: date-time
        primary:
          type: boolean
        workspaceName:
          type: string
        visibility:
          type: string
        workDir:
          type: string
    ListCredentialsResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/Credentials'
    ListDatasetVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/DatasetVersionDbDto'
    ListDatasetsResponse:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
    ListEventTypesResponse:
      type: object
      properties:
        eventTypes:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
    ListLabelsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDbDto'
        totalSize:
          type: integer
          format: int64
    ListMembersResponse:
      type: object
      properties:
        totalSize:
          type: integer
          format: int64
        members:
          type: array
          items:
            $ref: '#/components/schemas/MemberDbDto'
    ListOrganizationsResponse:
      type: object
      properties:
        totalSize:
          type: integer
          format: int32
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationDbDto'
    ListParticipantsResponse:
      type: object
      properties:
        totalSize:
          type: integer
          format: int64
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantDbDto'
    ListPipelineInfoResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            type: string
    ListPipelineSecretsResponse:
      type: object
      properties:
        pipelineSecrets:
          type: array
          items:
            $ref: '#/components/schemas/PipelineSecret'
        totalSize:
          type: integer
          format: int64
    ListPipelinesResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            $ref: '#/components/schemas/PipelineDbDto'
        totalSize:
          type: integer
          format: int64
    ListPlatformsResponse:
      type: object
      properties:
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/ComputePlatform'
    ListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/ComputeRegion'
    ListTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/DescribeTaskResponse'
        total:
          type: integer
          format: int64
    ListTeamResponse:
      type: object
      properties:
        totalSize:
          type: integer
          format: int64
        teams:
          type: array
          items:
            $ref: '#/components/schemas/TeamDbDto'
    ListWorkflowsResponse:
      type: object
      properties:
        totalSize:
          type: integer
          format: int64
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/ListWorkflowsResponse.ListWorkflowsElement'
    ListWorkflowsResponse.ListWorkflowsElement:
      type: object
      properties:
        progress:
          $ref: '#/components/schemas/ProgressData'
        starred:
          type: boolean
        orgId:
          type: integer
          format: int64
        optimized:
          type: boolean
        orgName:
          type: string
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDbDto'
        workflow:
          $ref: '#/components/schemas/WorkflowDbDto'
        workspaceId:
          type: integer
          format: int64
    ListWorkspacesAndOrgResponse:
      type: object
      properties:
        orgsAndWorkspaces:
          type: array
          items:
            $ref: '#/components/schemas/OrgAndWorkspaceDto'
    ListWorkspacesResponse:
      type: object
      properties:
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceDbDto'
    Log:
      type: object
      properties:
        name:
          type: string
        cmd:
          type: array
          items:
            type: string
        start_time:
          type: string
        end_time:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        exit_code:
          type: integer
          format: int32
    LogPage:
      type: object
      properties:
        entries:
          $ref: '#/components/schemas/Iterator_String_'
        rewindToken:
          type: string
        forwardToken:
          type: string
        pending:
          type: boolean
        message:
          type: string
        downloads:
          type: array
          items:
            $ref: '#/components/schemas/LogPage.Download'
        truncated:
          type: boolean
    LogPage.Download:
      type: object
      properties:
        fileName:
          type: string
        displayText:
          type: string
        saveName:
          type: string
    LsfComputeConfig:
      title: IBM LSF configuration
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - type: object
        properties:
          unitForLimits:
            type: string
          perJobMemLimit:
            type: boolean
          perTaskReserve:
            type: boolean
          environment:
            type: array
            items:
              $ref: '#/components/schemas/ConfigEnvVariable'
          discriminator:
            type: string
            description: property to select the compute config platform
            readOnly: true
    MemberDbDto:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userName:
          type: string
        avatar:
          type: string
        email:
          type: string
        userId:
          type: integer
          format: int64
        role:
          $ref: '#/components/schemas/OrgRole'
        firstName:
          type: string
        lastName:
          type: string
    MoabComputeConfig:
      title: Moab configuration
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - type: object
        properties:
          environment:
            type: array
            items:
              $ref: '#/components/schemas/ConfigEnvVariable'
          discriminator:
            type: string
            description: property to select the compute config platform
            readOnly: true
    MultiRequestFileSchema:
      type: object
      properties:
        file:
          type: string
          format: binary
    NavbarConfig:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: '#/components/schemas/NavbarConfig.NavbarMenu'
    NavbarConfig.NavbarMenu:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    OrgAndWorkspaceDto:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        orgLogoUrl:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        workspaceFullName:
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
        roles:
          type: array
          items:
            type: string
    OrgRole:
      type: string
      enum:
      - owner
      - member
      - collaborator
    Organization:
      required:
      - fullName
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        location:
          maxLength: 100
          type: string
        website:
          pattern: ""
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    OrganizationDbDto:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        logoUrl:
          type: string
        memberId:
          type: integer
          format: int64
        memberRole:
          $ref: '#/components/schemas/OrgRole'
        paying:
          type: boolean
    ParticipantDbDto:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userAvatarUrl:
          type: string
        userName:
          type: string
        email:
          type: string
        teamId:
          type: integer
          format: int64
        participantId:
          type: integer
          format: int64
        wspRole:
          $ref: '#/components/schemas/WspRole'
        orgRole:
          $ref: '#/components/schemas/OrgRole'
        teamName:
          type: string
        teamAvatarUrl:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        type:
          $ref: '#/components/schemas/ParticipantType'
    ParticipantType:
      type: string
      enum:
      - MEMBER
      - TEAM
      - COLLABORATOR
    PipelineDbDto:
      type: object
      properties:
        pipelineId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        repository:
          type: string
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        visibility:
          type: string
        deleted:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        optimizationStatus:
          $ref: '#/components/schemas/PipelineOptimizationStatus'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDbDto'
        computeEnv:
          $ref: '#/components/schemas/ComputeEnvDbDto'
    PipelineInfo:
      type: object
      properties:
        projectName:
          type: string
        simpleName:
          type: string
        repositoryUrl:
          type: string
        cloneUrl:
          type: string
        provider:
          type: string
        configFiles:
          type: array
          items:
            type: string
        workDirs:
          type: array
          items:
            type: string
        revisions:
          type: array
          items:
            type: string
        profiles:
          type: array
          items:
            type: string
        manifest:
          $ref: '#/components/schemas/WfManifest'
        warnings:
          type: array
          items:
            type: string
    PipelineOptimizationStatus:
      type: string
      enum:
      - OPTIMIZED
      - OPTIMIZABLE
      - UNAVAILABLE
    PipelineQueryAttribute:
      type: string
      enum:
      - optimized
      - labels
      - computeEnv
    PipelineSchemaAttributes:
      type: string
      enum:
      - schema
      - params
    PipelineSchemaResponse:
      required:
      - schema
      type: object
      properties:
        schema:
          type: string
        params:
          type: string
    PipelineSecret:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 100
          pattern: "^[a-zA-Z_](?:[0-9A-Za-z]+|(_)(?!\\1)){1,49}$"
          type: string
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    PlatformMetainfo:
      type: object
      oneOf:
      - $ref: '#/components/schemas/AwsBatchPlatformMetainfo'
      - $ref: '#/components/schemas/GooglePlatformMetainfo'
    PodCleanupPolicy:
      type: string
      enum:
      - on_success
      - always
      - never
    ProcessLoad:
      required:
      - cached
      - cpuLoad
      - cpuTime
      - cpus
      - failed
      - invCtxSwitch
      - loadCpus
      - loadMemory
      - loadTasks
      - memoryReq
      - memoryRss
      - peakCpus
      - peakMemory
      - peakTasks
      - pending
      - process
      - readBytes
      - running
      - submitted
      - succeeded
      - volCtxSwitch
      - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        process:
          type: string
        cpus:
          type: integer
          format: int64
          deprecated: true
        cpuTime:
          type: integer
          format: int64
          deprecated: true
        cpuLoad:
          type: integer
          format: int64
          deprecated: true
        memoryRss:
          type: integer
          format: int64
          deprecated: true
        memoryReq:
          type: integer
          format: int64
          deprecated: true
        readBytes:
          type: integer
          format: int64
          deprecated: true
        writeBytes:
          type: integer
          format: int64
          deprecated: true
        volCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        invCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        loadTasks:
          type: integer
          format: int64
          deprecated: true
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    ProgressData:
      type: object
      properties:
        workflowProgress:
          $ref: '#/components/schemas/WorkflowLoad'
        processesProgress:
          type: array
          items:
            $ref: '#/components/schemas/ProcessLoad'
    RandomWorkflowNameResponse:
      type: object
      properties:
        name:
          type: string
    ResourceData:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        mean:
          type: number
          format: float
        min:
          type: number
          format: float
        q1:
          type: number
          format: float
        q2:
          type: number
          format: float
        q3:
          type: number
          format: float
        max:
          type: number
          format: float
        minLabel:
          type: string
        maxLabel:
          type: string
        q1Label:
          type: string
        q2Label:
          type: string
        q3Label:
          type: string
    RunId:
      type: object
      properties:
        run_id:
          type: string
    RunListResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: '#/components/schemas/RunStatus'
        next_page_token:
          type: string
    RunLog:
      type: object
      properties:
        run_id:
          type: string
        request:
          $ref: '#/components/schemas/RunRequest'
        state:
          $ref: '#/components/schemas/State'
        run_log:
          $ref: '#/components/schemas/Log'
        task_logs:
          type: array
          items:
            $ref: '#/components/schemas/Log'
        outputs:
          type: object
    RunRequest:
      type: object
      properties:
        workflow_params:
          type: object
        workflow_type:
          type: string
        workflow_type_version:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        workflow_engine_parameters:
          type: object
          additionalProperties:
            type: string
        workflow_url:
          type: string
    RunStatus:
      type: object
      properties:
        run_id:
          type: string
        state:
          $ref: '#/components/schemas/State'
    SSHSecurityKeys:
      type: object
      properties:
        privateKey:
          type: string
          writeOnly: true
        passphrase:
          type: string
          writeOnly: true
        discriminator:
          type: string
          readOnly: true
    SecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          github: '#/components/schemas/GitHubSecurityKeys'
          azurerepos: '#/components/schemas/AzureReposSecurityKeys'
          container-reg: '#/components/schemas/ContainerRegistryKeys'
          tw-agent: '#/components/schemas/AgentSecurityKeys'
          k8s: '#/components/schemas/K8sSecurityKeys'
          ssh: '#/components/schemas/SSHSecurityKeys'
          google: '#/components/schemas/GoogleSecurityKeys'
          bitbucket: '#/components/schemas/BitBucketSecurityKeys'
          gitea: '#/components/schemas/GiteaSecurityKeys'
          codecommit: '#/components/schemas/CodeCommitSecurityKeys'
          gitlab: '#/components/schemas/GitLabSecurityKeys'
          aws: '#/components/schemas/AwsSecurityKeys'
          azure: '#/components/schemas/AzureSecurityKeys'
      oneOf:
      - $ref: '#/components/schemas/AwsSecurityKeys'
      - $ref: '#/components/schemas/GoogleSecurityKeys'
      - $ref: '#/components/schemas/GitHubSecurityKeys'
      - $ref: '#/components/schemas/GitLabSecurityKeys'
      - $ref: '#/components/schemas/BitBucketSecurityKeys'
      - $ref: '#/components/schemas/GiteaSecurityKeys'
      - $ref: '#/components/schemas/SSHSecurityKeys'
      - $ref: '#/components/schemas/K8sSecurityKeys'
      - $ref: '#/components/schemas/AzureSecurityKeys'
      - $ref: '#/components/schemas/AzureReposSecurityKeys'
      - $ref: '#/components/schemas/ContainerRegistryKeys'
      - $ref: '#/components/schemas/AgentSecurityKeys'
      - $ref: '#/components/schemas/CodeCommitSecurityKeys'
    ServiceInfo:
      type: object
      properties:
        version:
          type: string
        apiVersion:
          type: string
        commitId:
          type: string
        authTypes:
          type: array
          items:
            type: string
        loginPath:
          type: string
        navbar:
          $ref: '#/components/schemas/NavbarConfig'
        heartbeatInterval:
          type: integer
          format: int32
        userWorkspaceEnabled:
          type: boolean
        allowInstanceCredentials:
          type: boolean
        landingUrl:
          type: string
        termsOfUseUrl:
          type: string
        contentUrl:
          type: string
        analytics:
          $ref: '#/components/schemas/Analytics'
        allowLocalRepos:
          type: boolean
          deprecated: true
        contentMaxFileSize:
          type: integer
          format: int64
        waveEnabled:
          type: boolean
        groundswellEnabled:
          type: boolean
        groundswellAllowedWorkspaces:
          type: array
          items:
            type: integer
            format: int64
        waveAllowedWorkspaces:
          type: array
          items:
            type: integer
            format: int64
        forgePrefix:
          type: string
        dataStudioAllowedWorkspaces:
          type: array
          items:
            type: integer
            format: int64
        seqeraCloud:
          type: boolean
        evalWorkspaceIds:
          type: array
          items:
            type: integer
            format: int64
    ServiceInfoResponse:
      type: object
      properties:
        serviceInfo:
          $ref: '#/components/schemas/ServiceInfo'
    SlurmComputeConfig:
      title: Slurm configuration
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - type: object
        properties:
          environment:
            type: array
            items:
              $ref: '#/components/schemas/ConfigEnvVariable'
          discriminator:
            type: string
            description: property to select the compute config platform
            readOnly: true
    State:
      type: string
      enum:
      - UNKNOWN
      - QUEUED
      - INITIALIZING
      - RUNNING
      - PAUSED
      - COMPLETE
      - EXECUTOR_ERROR
      - SYSTEM_ERROR
      - CANCELED
      - CANCELING
    SubmitWorkflowLaunchRequest:
      type: object
      properties:
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
    SubmitWorkflowLaunchResponse:
      type: object
      properties:
        workflowId:
          type: string
    Task:
      required:
      - status
      - taskId
      type: object
      properties:
        hash:
          type: string
        name:
          type: string
        process:
          type: string
        tag:
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        module:
          type: array
          items:
            type: string
        container:
          type: string
        attempt:
          type: integer
          format: int32
        script:
          type: string
        scratch:
          type: string
        workdir:
          type: string
        queue:
          type: string
        cpus:
          type: integer
          format: int32
        memory:
          type: integer
          format: int64
        disk:
          type: integer
          format: int64
        time:
          type: integer
          format: int64
        env:
          type: string
        executor:
          type: string
        machineType:
          type: string
        cloudZone:
          type: string
        priceModel:
          $ref: '#/components/schemas/CloudPriceModel'
        cost:
          type: number
        errorAction:
          type: string
        exitStatus:
          type: integer
          format: int32
        duration:
          type: integer
          format: int64
        realtime:
          type: integer
          format: int64
        nativeId:
          type: string
        pcpu:
          type: number
          format: double
        pmem:
          type: number
          format: double
        rss:
          type: integer
          format: int64
        vmem:
          type: integer
          format: int64
        peakRss:
          type: integer
          format: int64
        peakVmem:
          type: integer
          format: int64
        rchar:
          type: integer
          format: int64
        wchar:
          type: integer
          format: int64
        syscr:
          type: integer
          format: int64
        syscw:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxt:
          type: integer
          format: int64
        invCtxt:
          type: integer
          format: int64
        exit:
          type: string
        id:
          type: integer
          format: int64
          nullable: true
        taskId:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/TaskStatus'
        dateCreated:
          type: string
          format: date-time
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
    TaskStatus:
      type: string
      enum:
      - NEW
      - SUBMITTED
      - RUNNING
      - CACHED
      - COMPLETED
      - FAILED
      - ABORTED
    Team:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        description:
          maxLength: 250
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    TeamDbDto:
      type: object
      properties:
        description:
          type: string
        avatarUrl:
          type: string
        teamId:
          type: integer
          format: int64
        membersCount:
          type: integer
          format: int64
        name:
          type: string
    TraceBeginRequest:
      type: object
      properties:
        workflow:
          $ref: '#/components/schemas/Workflow'
        processNames:
          type: array
          items:
            type: string
        towerLaunch:
          type: boolean
    TraceBeginResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TraceProcessingStatus'
        workflowId:
          type: string
        watchUrl:
          type: string
    TraceCompleteRequest:
      type: object
      properties:
        workflow:
          $ref: '#/components/schemas/Workflow'
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowMetrics'
        progress:
          $ref: '#/components/schemas/TraceProgressData'
    TraceCompleteResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TraceProcessingStatus'
        workflowId:
          type: string
    TraceCreateRequest:
      type: object
      properties:
        sessionId:
          type: string
        runName:
          type: string
        projectName:
          type: string
        repository:
          type: string
        workflowId:
          type: string
    TraceCreateResponse:
      type: object
      properties:
        message:
          type: string
        workflowId:
          type: string
    TraceHeartbeatRequest:
      type: object
      properties:
        progress:
          $ref: '#/components/schemas/TraceProgressData'
    TraceHeartbeatResponse:
      type: object
      properties:
        message:
          type: string
    TraceProcessingStatus:
      type: string
      enum:
      - OK
      - KO
    TraceProgressData:
      type: object
      properties:
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        processes:
          type: array
          items:
            $ref: '#/components/schemas/TraceProgressDetail'
    TraceProgressDetail:
      type: object
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        terminated:
          type: boolean
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
    TraceProgressRequest:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        progress:
          $ref: '#/components/schemas/TraceProgressData'
    TraceProgressResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TraceProcessingStatus'
        workflowId:
          type: string
    UnivaComputeConfig:
      title: Univa Grid Engine configuration
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - type: object
        properties:
          environment:
            type: array
            items:
              $ref: '#/components/schemas/ConfigEnvVariable'
          discriminator:
            type: string
            description: property to select the compute config platform
            readOnly: true
    UpdateActionRequest:
      type: object
      properties:
        name:
          type: string
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
    UpdateComputeEnvRequest:
      type: object
      properties:
        name:
          type: string
    UpdateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
    UpdateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UpdateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateMemberRoleRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/OrgRole'
    UpdateOrganizationRequest:
      type: object
      properties:
        location:
          type: string
        description:
          type: string
        paying:
          type: boolean
          nullable: true
        website:
          type: string
        logoId:
          type: string
        fullName:
          type: string
        name:
          type: string
    UpdateParticipantRoleRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/WspRole'
    UpdatePipelineRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    UpdatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDbDto'
    UpdatePipelineSecretRequest:
      type: object
      properties:
        value:
          type: string
    UpdateTeamRequest:
      type: object
      properties:
        description:
          type: string
        avatarId:
          type: string
        name:
          type: string
    UpdateWorkspaceRequest:
      type: object
      properties:
        visibility:
          $ref: '#/components/schemas/Visibility'
        description:
          type: string
        fullName:
          type: string
        name:
          type: string
    UploadDatasetVersionResponse:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/DatasetVersionDbDto'
    UserDbDto:
      required:
      - email
      - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          maxLength: 40
          type: string
        email:
          maxLength: 255
          type: string
          format: email
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        organization:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        avatar:
          type: string
        avatarId:
          type: string
        notification:
          type: boolean
        termsOfUseConsent:
          type: boolean
        marketingConsent:
          type: boolean
        lastAccess:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        deleted:
          type: boolean
    Visibility:
      type: string
      enum:
      - PRIVATE
      - SHARED
    WesErrorResponse:
      type: object
      properties:
        msg:
          type: string
        status_code:
          type: integer
          format: int32
    WfManifest:
      type: object
      properties:
        nextflowVersion:
          maxLength: 20
          type: string
        defaultBranch:
          maxLength: 20
          type: string
        version:
          maxLength: 20
          type: string
        homePage:
          maxLength: 200
          type: string
        gitmodules:
          maxLength: 150
          type: string
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 150
          type: string
        mainScript:
          maxLength: 100
          type: string
        author:
          maxLength: 150
          type: string
    WfNextflow:
      type: object
      properties:
        version:
          maxLength: 20
          type: string
        build:
          maxLength: 10
          type: string
        timestamp:
          type: string
          format: date-time
    WfStats:
      type: object
      properties:
        computeTimeFmt:
          maxLength: 50
          type: string
        cachedCount:
          type: integer
          format: int32
        failedCount:
          type: integer
          format: int32
        ignoredCount:
          type: integer
          format: int32
        succeedCount:
          type: integer
          format: int32
        cachedCountFmt:
          type: string
        succeedCountFmt:
          type: string
        failedCountFmt:
          type: string
        ignoredCountFmt:
          type: string
        cachedPct:
          type: number
          format: float
        failedPct:
          type: number
          format: float
        succeedPct:
          type: number
          format: float
        ignoredPct:
          type: number
          format: float
        cachedDuration:
          type: integer
          format: int64
        failedDuration:
          type: integer
          format: int64
        succeedDuration:
          type: integer
          format: int64
    Workflow:
      required:
      - commandLine
      - projectName
      - runName
      - sessionId
      - submit
      - userName
      - workDir
      type: object
      properties:
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        ownerId:
          type: integer
          format: int64
          readOnly: true
        repository:
          type: string
        id:
          maxLength: 16
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        runName:
          maxLength: 80
          type: string
        sessionId:
          maxLength: 36
          type: string
        profile:
          maxLength: 100
          type: string
        workDir:
          type: string
        commitId:
          maxLength: 40
          type: string
        userName:
          maxLength: 40
          type: string
        scriptId:
          maxLength: 40
          type: string
        revision:
          maxLength: 100
          type: string
        commandLine:
          maxLength: 8096
          type: string
        projectName:
          maxLength: 200
          type: string
        scriptName:
          maxLength: 100
          type: string
        launchId:
          maxLength: 22
          type: string
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: '#/components/schemas/WfManifest'
        nextflow:
          $ref: '#/components/schemas/WfNextflow'
        stats:
          $ref: '#/components/schemas/WfStats'
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
          readOnly: true
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
        logFile:
          maxLength: 255
          type: string
        outFile:
          maxLength: 255
          type: string
        operationId:
          maxLength: 110
          type: string
    WorkflowDbDto:
      type: object
      properties:
        profile:
          type: string
        params:
          type: object
          additionalProperties: true
        commandLine:
          type: string
        projectDir:
          type: string
        errorReport:
          type: string
        resume:
          type: boolean
        start:
          type: string
          format: date-time
        revision:
          type: string
        submit:
          type: string
          format: date-time
        container:
          type: string
        dateCreated:
          type: string
          format: date-time
        containerEngine:
          type: string
        runName:
          type: string
        projectName:
          type: string
        complete:
          type: string
          format: date-time
        launchDir:
          type: string
        lastUpdated:
          type: string
          format: date-time
        exitStatus:
          type: integer
          format: int32
        deleted:
          type: boolean
        ownerId:
          type: integer
          format: int64
        repository:
          type: string
        id:
          type: string
        sessionId:
          type: string
        workDir:
          type: string
        commitId:
          type: string
        userName:
          type: string
        scriptId:
          type: string
        scriptName:
          type: string
        launchId:
          type: string
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        configFiles:
          type: array
          items:
            type: string
        nextflow:
          $ref: '#/components/schemas/WfNextflow'
        success:
          type: boolean
        errorMessage:
          type: string
        stats:
          $ref: '#/components/schemas/WfStats'
        configText:
          type: string
        manifest:
          $ref: '#/components/schemas/WfManifest'
        homeDir:
          type: string
        scriptFile:
          type: string
        duration:
          type: integer
          format: int64
    WorkflowLaunchRequest:
      type: object
      properties:
        id:
          type: string
        computeEnvId:
          type: string
        runName:
          type: string
        pipeline:
          type: string
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        dateCreated:
          type: string
          format: date-time
    WorkflowLaunchResponse:
      type: object
      properties:
        id:
          type: string
        computeEnv:
          $ref: '#/components/schemas/ComputeEnv'
        pipeline:
          type: string
        pipelineId:
          type: integer
          format: int64
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        resumeDir:
          type: string
        resumeCommitId:
          type: string
        headJobMemoryMb:
          type: integer
          format: int32
        headJobCpus:
          type: integer
          format: int32
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        dateCreated:
          type: string
          format: date-time
    WorkflowLoad:
      required:
      - cached
      - cpuLoad
      - cpuTime
      - cpus
      - failed
      - invCtxSwitch
      - loadCpus
      - loadMemory
      - loadTasks
      - memoryReq
      - memoryRss
      - peakCpus
      - peakMemory
      - peakTasks
      - pending
      - readBytes
      - running
      - submitted
      - succeeded
      - volCtxSwitch
      - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        cpus:
          type: integer
          format: int64
        cpuTime:
          type: integer
          format: int64
        cpuLoad:
          type: integer
          format: int64
        memoryRss:
          type: integer
          format: int64
        memoryReq:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxSwitch:
          type: integer
          format: int64
        invCtxSwitch:
          type: integer
          format: int64
        cost:
          type: number
        loadTasks:
          type: integer
          format: int64
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        executors:
          type: array
          items:
            type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    WorkflowLogResponse:
      type: object
      properties:
        log:
          $ref: '#/components/schemas/LogPage'
    WorkflowMetrics:
      required:
      - process
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        process:
          maxLength: 255
          type: string
        cpu:
          $ref: '#/components/schemas/ResourceData'
        mem:
          $ref: '#/components/schemas/ResourceData'
        vmem:
          $ref: '#/components/schemas/ResourceData'
        time:
          $ref: '#/components/schemas/ResourceData'
        reads:
          $ref: '#/components/schemas/ResourceData'
        writes:
          $ref: '#/components/schemas/ResourceData'
        cpuUsage:
          $ref: '#/components/schemas/ResourceData'
        memUsage:
          $ref: '#/components/schemas/ResourceData'
        timeUsage:
          $ref: '#/components/schemas/ResourceData'
    WorkflowQueryAttribute:
      type: string
      enum:
      - optimized
      - labels
      - minimal
    WorkflowStatus:
      type: string
      enum:
      - SUBMITTED
      - RUNNING
      - SUCCEEDED
      - FAILED
      - CANCELLED
      - UNKNOWN
    Workspace:
      required:
      - fullName
      - name
      - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    WorkspaceDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
    WspRole:
      type: string
      enum:
      - owner
      - admin
      - maintain
      - launch
      - view
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
